1639784245
AwuilbDvXz%3A19b3841ac9e627800a1b5af883d1c4be-f4ee583a01e89bbb0b59f29b3c10a747
s:10072:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"f4ee583a01e89bbb0b59f29b3c10a747";s:39:" phpDocumentor\Reflection\Php\File name";s:22:"BuildFakerDataTest.php";s:39:" phpDocumentor\Reflection\Php\File path";s:28:"tests/BuildFakerDataTest.php";s:41:" phpDocumentor\Reflection\Php\File source";s:2866:"<?php

namespace Uspdev\Replicado\Tests;

use Faker\Factory;
use PHPUnit\Framework\TestCase;
use Uspdev\Replicado\DB;
use Uspdev\Replicado\Uteis;
use Dotenv\Dotenv;

/** Build faker data after run all phpunit tests
 */
class BuildFakerDataTest extends TestCase
{

    public function test_deploy_data()
    {
        #1. Cleanup
        DB::getInstance()->prepare('DELETE FROM PESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM LOCALIZAPESSOA')->execute();
        DB::getInstance()->prepare('DELETE FROM EMAILPESSOA')->execute();

        # 2. Populate PESSOA table with 100 people
        $faker = Factory::create();
        $sql = "INSERT INTO PESSOA (codpes, nompes, nompesttd, nompesfon, dtanas)
                VALUES (convert(int,:codpes),:nompes, :nompesttd, :nompesfon, :dtanas)";
        for ($i = 0; $i < 100; $i++) {
            $name = $faker->name;
            $data = [
                'codpes' => $faker->randomNumber,
                'nompes' => $faker->name,
                'nompesttd' => $name,
                'nompesfon' => Uteis::fonetico($name),
                'dtanas' => '2000-04-01 00:00:00'
            ];
            DB::getInstance()->prepare($sql)->execute($data);
        }

        # 3. Assertion
        $computed = DB::fetch('SELECT COUNT(*) FROM PESSOA');
        $this->assertSame(100, (int) $computed['computed']);

        # 4. A tabela LOCALIZAPESSOA será baseada na tabela PESSOA
        $sql = "INSERT INTO LOCALIZAPESSOA (codpes, tipvinext, nompes, sitatl, codundclg, codfncetr)
                VALUES (convert(int,:codpes), :tipvinext, :nompes, :sitatl, convert(int,:codundclg),convert(int,:codfncetr))";
        $pessoas = DB::fetchAll('SELECT * FROM PESSOA');
        foreach ($pessoas as $pessoa) {
            $data = [
                'codpes' => $pessoa['codpes'],
                'tipvinext' => 'Servidor',
                'nompes' => $pessoa['nompes'],
                'sitatl' => 'A',
                'codundclg' => 8,
                'codfncetr' => 0
            ];
            DB::getInstance()->prepare($sql)->execute($data);
        }
        $computed = DB::fetch('SELECT COUNT(*) FROM LOCALIZAPESSOA');
        $this->assertSame(100, (int) $computed['computed']);

        # 5. EMAILPESSOA
        $sql = "INSERT INTO EMAILPESSOA (codpes, codema, stamtr)
                VALUES (convert(int,:codpes), :codema, :stamtr)";
        $pessoas = DB::fetchAll('SELECT * FROM PESSOA');
        foreach ($pessoas as $pessoa) {
            $data = [
                'codpes' => $pessoa['codpes'],
                'codema' => $faker->email,
                'stamtr' => 'S',
            ];
            DB::getInstance()->prepare($sql)->execute($data);
        }
        $computed = DB::fetch('SELECT COUNT(*) FROM EMAILPESSOA');
        $this->assertSame(100, (int) $computed['computed']);

    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:23:"\Uspdev\Replicado\Tests";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:23:"\Uspdev\Replicado\Tests";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"Tests";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:42:"\Uspdev\Replicado\Tests\BuildFakerDataTest";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:42:"\Uspdev\Replicado\Tests\BuildFakerDataTest";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"BuildFakerDataTest";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:44:"Build faker data after run all phpunit tests";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:22:"Uspdev\Replicado\Tests";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:5:{s:7:"Factory";s:13:"Faker\Factory";s:8:"TestCase";s:26:"PHPUnit\Framework\TestCase";s:2:"DB";s:19:"Uspdev\Replicado\DB";s:5:"Uteis";s:22:"Uspdev\Replicado\Uteis";s:6:"Dotenv";s:13:"Dotenv\Dotenv";}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:11;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\PHPUnit\Framework\TestCase";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"TestCase";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:1:{s:62:"\Uspdev\Replicado\Tests\BuildFakerDataTest::test_deploy_data()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:62:"\Uspdev\Replicado\Tests\BuildFakerDataTest::test_deploy_data()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"test_deploy_data";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:16;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:13;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";